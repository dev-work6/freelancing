(()=>{var e={};e.id=718,e.ids=[718],e.modules={56037:e=>{"use strict";e.exports=require("mongoose")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},79428:e=>{"use strict";e.exports=require("buffer")},55511:e=>{"use strict";e.exports=require("crypto")},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},9942:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>g,routeModule:()=>p,serverHooks:()=>v,workAsyncStorage:()=>y,workUnitAsyncStorage:()=>h});var i={};t.r(i),t.d(i,{GET:()=>m,POST:()=>d});var s=t(42706),a=t(28203),n=t(45994),u=t(39187),o=t(43694),l=t(91290),c=t(13139);async function m(e){try{await (0,o.A)();let{searchParams:r}=new URL(e.url),t={status:"available"},i=r.get("skill");i&&(t.skills={$in:[i]});let s=r.get("minRate");s&&(t.hourlyRate={$gte:parseInt(s)});let a=r.get("maxRate");a&&(t.hourlyRate={...t.hourlyRate,$lte:parseInt(a)});let n=await l.A.find(t).populate("userId","name email").sort({rating:-1,createdAt:-1}).limit(20);return u.NextResponse.json(n)}catch(e){return console.error("GET hourly services error:",e),u.NextResponse.json({error:"Failed to fetch hourly services"},{status:500})}}async function d(e){try{let r=e.headers.get("authorization"),t=r?.split(" ")[1]||"",i=(0,c.nr)(t||"");await (0,o.A)();let s=await e.json();for(let e of["name","description","hourlyRate","currency","minimumHours","availability"])if(!s[e])return u.NextResponse.json({error:`${e} is required`},{status:400});let a=await l.A.create({...s,userId:i?.userId});return u.NextResponse.json(a,{status:201})}catch(e){return console.error("POST hourly service error:",e),u.NextResponse.json({error:e instanceof Error?e.message:"Failed to create hourly service"},{status:400})}}let p=new s.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/services/hourly/route",pathname:"/api/services/hourly",filename:"route",bundlePath:"app/api/services/hourly/route"},resolvedPagePath:"C:\\Users\\Administrator\\Desktop\\freelance_work_showcase\\app\\api\\services\\hourly\\route.ts",nextConfigOutput:"",userland:i}),{workAsyncStorage:y,workUnitAsyncStorage:h,serverHooks:v}=p;function g(){return(0,n.patchFetch)({workAsyncStorage:y,workUnitAsyncStorage:h})}},96487:()=>{},78335:()=>{},13139:(e,r,t)=>{"use strict";t.d(r,{nr:()=>n,zF:()=>a});var i=t(43008);let s=process.env.JWT_SECRET||"your-secret-key",a=e=>i.sign(e,s,{expiresIn:"1d"}),n=e=>{try{return i.verify(e,s)}catch{return null}}},43694:(e,r,t)=>{"use strict";t.d(r,{A:()=>n});var i=t(56037),s=t.n(i);if(!process.env.MONGODB_URI)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let a=process.env.MONGODB_URI,n=async function(){try{let e=await s().connect(a);return console.log("MongoDB connected successfully"),e}catch(e){throw console.error("Error connecting to MongoDB:",e),e}}},91290:(e,r,t)=>{"use strict";t.d(r,{A:()=>u});var i=t(56037),s=t.n(i);let a=new i.Schema({message:{type:String,required:[!0,"Reply message is required"],trim:!0,maxLength:[1e3,"Reply cannot exceed 1000 characters"]},offerAmount:{type:Number,min:[0,"Offer amount cannot be negative"]},isFromAdmin:{type:Boolean,required:!0,default:!1},userId:{type:i.Schema.Types.ObjectId,ref:"User"},email:{type:String,trim:!0},createdAt:{type:Date,default:Date.now}}),n=new i.Schema({userId:{type:i.Schema.Types.ObjectId,ref:"User"},email:{type:String,trim:!0},name:{type:String,required:[!0,"Service name is required"],trim:!0,maxLength:[100,"Name cannot exceed 100 characters"]},description:{type:String,required:[!0,"Description is required"],trim:!0,maxLength:[500,"Description cannot exceed 500 characters"]},hourlyRate:{type:Number,required:[!0,"Hourly rate is required"],min:[0,"Hourly rate cannot be negative"]},currency:{type:String,required:[!0,"Currency is required"],enum:["INR","USD","EUR"]},minimumHours:{type:Number,required:[!0,"Minimum hours is required"],min:[1,"Minimum hours must be at least 1"]},maximumHours:{type:Number,min:[1,"Maximum hours must be at least 1"]},availability:{startTime:{type:Date,required:[!0,"Start time is required"]},endTime:{type:Date,required:[!0,"End time is required"]},timezone:{type:String,required:[!0,"Timezone is required"]},daysAvailable:[{type:String,enum:["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]}]},skills:[{type:String,required:!0}],status:{type:String,enum:["available","busy","unavailable"],default:"available"},replies:[a],rating:{type:Number,default:0,min:0,max:5},totalBookings:{type:Number,default:0}},{timestamps:!0});n.pre("save",function(e){this.availability.endTime<=this.availability.startTime&&e(Error("End time must be after start time")),this.maximumHours&&this.maximumHours<this.minimumHours&&e(Error("Maximum hours must be greater than minimum hours")),e()}),n.index({userId:1}),n.index({status:1}),n.index({skills:1});let u=s().models.HourlyService||s().model("HourlyService",n)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[1989,5452,3008],()=>t(9942));module.exports=i})();